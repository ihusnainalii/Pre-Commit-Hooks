#!/bin/bash
branch="$(git rev-parse --abbrev-ref HEAD)"

echo ""
echo "Current Branch: $branch"
echo ""

#----------------------------------------------------------------
# RESTRICT BRANCHES FROM DIRECT PUSH
#----------------------------------------------------------------
echo ""
echo "Running git pre-commit hook. Making sure that it's a valid branch..."
echo ""

if [ "$branch" = "main" ] || [ "$branch" = "uat" ]; then
  echo "You can't commit directly to $branch"
  exit 1
fi

echo ""
echo "The branch is valid, moving onto the next step..."
echo ""

#----------------------------------------------------------------
# RUN SWIFTLINT  
#----------------------------------------------------------------

# Run SwiftLint
START_DATE=$(date +"%s")

# This line is required to make sure it works on Apple Silicon.
if [[ "$(uname -m)" == arm64 ]]; then
    export PATH="/opt/homebrew/bin:$PATH"
fi

SWIFT_LINT=/usr/local/bin/swiftlint
LINT_ERROR=0

# Run SwiftLint for a given filename
run_swiftlint() {
    local filename="${1}"
    if [[ "${filename##*.}" == "swift" ]]; then
        # Run lint and capture errors, using --strict to fail on warnings or errors
        ${SWIFT_LINT} lint --path "${filename}" --strict
        # Check if SwiftLint exited with a non-zero status (error)
        if [ $? -ne 0 ]; then
            LINT_ERROR=1
        fi
    fi
}

if [[ -e "${SWIFT_LINT}" ]]; then
    echo "SwiftLint version: $(${SWIFT_LINT} version)"
    
    # Run SwiftLint for both staged and unstaged files
    git diff --name-only | while read filename; do run_swiftlint "${filename}"; done
    git diff --cached --name-only | while read filename; do run_swiftlint "${filename}"; done
    
    # Check if there were any linting errors
    if [ $LINT_ERROR -ne 0 ]; then
        echo "SwiftLint found errors. Please fix them before committing."
        exit 1
    fi
else
    echo "${SWIFT_LINT} is not installed. Please install it first from https://www.github.com/realm/SwiftLint"
    exit 0
fi

END_DATE=$(date +"%s")

DIFF=$(($END_DATE - $START_DATE))

echo "SwiftLint took $(($DIFF / 60)) minutes and $(($DIFF % 60)) seconds to complete."